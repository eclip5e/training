// 12. As a developer I want an ability to access the library through global variable, AMD module or CommonJS module.
define(['./logger'], function(logger) {
    'use strict';

    /*
     * 1. As a developer I want to have an ability to log information.
     * 6. As a developer I want to have an ability to select from built-in logging methods.
     */

    // 2. As a developer I want to have an ability to send log information to the console.
    logger.writeToConsole('Test log message.');

    // 3. As a developer I want to have an ability to send log information to an alert window.
    logger.writeToAlert('This message should appear in alert window.');

    // 4. As a developer I want to have an ability to send log information to the current window.
    logger.writeToWindow('Log message in the HTML log window');

    // 5. As a developer I want to have an ability to send log information to abstract Web API endpoint.
    logger.writeToRemote('Sending this message to remote API for processing');

    // 7. As a developer I want to be able to extend the library with custom logging methods.
    var customLogger = logger.createLogger({name: 'MyLogger', dateFormat: 'short', color: 'blue'});
    customLogger.writeToWindow('This message is generated by custom logger.');

    // 8. As a developer I want to library to automatically log all unhandled client-side exceptions.
    // Property logger.logUncaughtExceptions allows to set logging for unhandled client-side exceptions.
    // Set to true by default.

    // 9. As a developer I want to have an ability to extend library with my own instrumentation methods
    // so that the library can monitor not only exceptions but other events too.


});
